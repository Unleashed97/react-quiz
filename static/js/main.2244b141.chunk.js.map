{"version":3,"sources":["components/Burger.js","components/Nav.js","components/Header.js","components/AnswerMode.js","components/LanguageSwitcher.js","components/Sidebar.js","pages/Home.js","data/quiz.js","components/QuizScore.js","components/QuizImage.js","components/InputAnswer.js","pages/Quiz.js","App.js","index.js"],"names":["Burger","props","classes","toggleSidebar","push","pop","className","join","onClick","handleBurgerBtnClick","Nav","isSidebarNav","to","Header","onSidebarToggling","AnswerMode","htmlFor","id","type","onChange","onToggleAnswerMode","checked","answerMode","LanguageSwitcher","Sidebar","exact","path","onChangeAnswerMode","Home","href","quiz","questionText","questionImage","answerOptions","answerText","isCorrect","QuizScore","score","handleCheckAnswersBtnClick","handleTryAgainbtnClick","length","QuizImage","currentQuestion","src","process","alt","InputAnswer","inputAnswer","setInputAnswer","formAnswerSubmit","onSubmit","placeholder","value","autoComplete","event","target","Quiz","useState","setCurrentQuestion","setScore","showScore","setShowScore","correctAnswer","preventDefault","forEach","item","toUpperCase","nextQuestion","map","index","handleAnswerClick","App","setToggleSidebar","setAnswerMode","handleCheckboxClick","basename","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2244b141.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Burger = (props) => {\r\n    const classes =[]\r\n    if(props.toggleSidebar){\r\n        classes.push('active')\r\n    }\r\n    else classes.pop()\r\n\r\n    return (\r\n        <button className={`burger ${classes.join(' ')}`} onClick={props.handleBurgerBtnClick}>\r\n            <div className=\"burger__item\"></div>\r\n            <div className=\"burger__item\"></div>\r\n            <div className=\"burger__item\"></div>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Burger\r\n","import React, {useState} from 'react'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport Burger from './Burger';\r\n\r\nconst Nav = (props) => {\r\n    const classes = [];\r\n\r\n    // clicking by the menu item is closing down the sidebar\r\n\r\n    if(props.isSidebarNav){\r\n        classes.push('nav--sidebar')\r\n    }\r\n    return (\r\n        <nav className={`nav ${classes.join(' ')}`}>\r\n            <ul className=\"nav__list\">\r\n                <li className=\"nav__item\">\r\n                    <Link to=\"/\" className=\"nav__link\">Home</Link>\r\n                </li>\r\n                <li className=\"nav__item\">\r\n                    <Link to=\"/quiz\" className=\"nav__link\">Quizzes</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        \r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\n\r\nimport Nav from './Nav';\r\nimport Burger from './Burger';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__inner\">\r\n                    <Nav toggleSidebar={props.toggleSidebar}/>\r\n                    <Burger toggleSidebar={props.toggleSidebar} handleBurgerBtnClick={props.onSidebarToggling}/>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nconst AnswerMode = (props) => {\r\n  // console.log(answerMode)\r\n  return (\r\n    <label className=\"check\" htmlFor=\"checkbox\">\r\n        <p className=\"check__text\">Hard mode</p>\r\n        <input id=\"checkbox\" className=\"check__input\" type=\"checkbox\" onChange={props.onToggleAnswerMode} checked={props.answerMode}/>\r\n        <span className=\"check__slider\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default AnswerMode;\r\n","import React from 'react'\r\n\r\n\r\nconst LanguageSwitcher = () => {\r\n\r\n    // const styles={\r\n    //     sliderLeft:{\r\n    //         display: 'block',\r\n    //         position: 'absolute',\r\n    //         zIndex: '-1',\r\n    //         margin: '0',\r\n    //         padding: '0',\r\n    //         width: '25px',\r\n    //         height: '20px',\r\n    //         backgroundImage: `url(${uk})`\r\n    //     },\r\n    //     sliderRight:{\r\n    //         display: 'block',\r\n    //         position: 'absolute',\r\n    //         zIndex: '-1',\r\n    //         margin: '0',\r\n    //         padding: '0',\r\n    //         width: '25px',\r\n    //         height: '20px',\r\n    //         backgroundImage: `url(${ru})`\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <label className=\"lang-switch\" htmlFor='lang-switch__checkbox'>\r\n            <p className=\"lang-switch__text\">Change language</p>\r\n            <input id=\"lang-switch__checkbox\" className=\"lang-switch__checkbox\" type=\"checkbox\"/>\r\n            <div className=\"lang-switch__slider\">\r\n                <span className=\"lang-switch__slider-left\">\r\n                    UK\r\n                    {/* <img style={styles.sliderLeft} src={uk} alt=\"English language\"/> */}\r\n                </span>\r\n                <span className=\"lang-switch__slider-right\">\r\n                    RU\r\n                    {/* <img style={styles.sliderRight} src={ru} alt=\"Russian language\"/> */}\r\n                </span>\r\n            </div>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default LanguageSwitcher\r\n","import React from 'react'\r\n\r\nimport {\r\n    HashRouter,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nimport Nav from './Nav'\r\nimport AnswerMode from './AnswerMode'\r\nimport LanguageSwitcher from './LanguageSwitcher'\r\n\r\nconst Sidebar = (props) => {\r\n    const classes = []\r\n\r\n    if(props.toggleSidebar){\r\n        classes.push('active');\r\n    }\r\n    else{\r\n        classes.pop();\r\n    }\r\n\r\n    // sidebar nav\r\n    let isSidebarNav = true;\r\n\r\n    return (\r\n        <div className={`sidebar ${classes.join(' ')}`}>\r\n            <div className=\"sidebar__inner\">\r\n                <nav className=\"sidebar__block sidebar__nav\">\r\n                    <h4 className=\"sidebar__title\">Menu</h4>\r\n                    <HashRouter>\r\n                        <Nav isSidebarNav={isSidebarNav}/>\r\n                        <Route exact path=\"/\" />\r\n                        <Route exact path=\"/quiz\" />\r\n                    </HashRouter>\r\n                </nav>\r\n                \r\n                <div className=\"sidebar__block sidebar--settings\">\r\n                    <h4 className=\"sidebar__title\">Settings</h4>\r\n                    <div className=\"sidebar__block-content\">\r\n                        <div className=\"sidebar__block-item\">\r\n                            <AnswerMode answerMode={props.answerMode} onToggleAnswerMode={props.onChangeAnswerMode}/>\r\n                        </div>\r\n                        <div className=\"sidebar__block-item\">\r\n                            <LanguageSwitcher/>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\n\r\nimport {\r\n    HashRouter,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main className=\"main-content\">\r\n            <section className=\"section\">\r\n                <div className=\"container\">\r\n                    <div className=\"section__inner\">\r\n                        <h1 className=\"section__title\">Geography quizzes</h1>\r\n                        <div className=\"section__content\">\r\n                            {/* Cards */}\r\n                            <div className=\"cards-list\">\r\n                                <Link to=\"/quiz\" className=\"card\">\r\n                                    <div className=\"card__mask\"></div>\r\n                                    <p className=\"card__title\">\r\n                                        Capitals <br/>\r\n                                        <span>- of -</span> <br/>\r\n                                        Europe</p>\r\n                                </Link>\r\n                                <a href=\"/#\" className=\"card\">\r\n                                <p className=\"card__title\">\r\n                                        Capitals <br/>\r\n                                        <span>- of -</span> <br/>\r\n                                        Asia</p>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"section\">\r\n                <div className=\"container\">\r\n                    <div className=\"section__inner\">\r\n                        <h1 className=\"section__title\">Another quizzes</h1>\r\n                        <div className=\"section__content\">\r\n                            {/* Cards */}\r\n                            <div className=\"cards-list\">\r\n                                <a href=\"/#\" className=\"card\">\r\n                                    <div className=\"card__title\">Something</div>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","const quiz = [\r\n    // Western Europe\r\n    {\r\n      questionText: 'What the capital of Austria?',\r\n      questionImage: 'images/austria.jpg',\r\n      answerOptions: [\r\n        { answerText: 'England', isCorrect: false },\r\n        { answerText: 'Vienna', isCorrect: true },\r\n        { answerText: 'London', isCorrect: false },\r\n        { answerText: 'Rome', isCorrect: false }\r\n      ]\r\n    },\r\n    {\r\n      questionText: 'What the capital of Belgium?',\r\n      questionImage: 'images/belgium.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Paris', isCorrect: false },\r\n        { answerText: 'Moscow', isCorrect: false },\r\n        { answerText: 'Zagreb', isCorrect: false },\r\n        { answerText: 'Brussels', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of United Kingdom?',\r\n      questionImage: 'images/uk.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Los-Angeles', isCorrect: false },\r\n        { answerText: 'York', isCorrect: false },\r\n        { answerText: 'Barcelona', isCorrect: false },\r\n        { answerText: 'London', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Germany?',\r\n      questionImage: 'images/germany.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Berlin', isCorrect: true },\r\n        { answerText: 'Canberra', isCorrect: false },\r\n        { answerText: 'Madrid', isCorrect: false },\r\n        { answerText: 'Reykjavik', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Ireland?',\r\n      questionImage: 'images/ireland.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Bern', isCorrect: false },\r\n        { answerText: 'Tallinn', isCorrect: false },\r\n        { answerText: 'Florence', isCorrect: false },\r\n        { answerText: 'Dublin', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Liechtenstein?',\r\n      questionImage: 'images/liechtenstein.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Iceland', isCorrect: false },\r\n        { answerText: 'Vaduz', isCorrect: true },\r\n        { answerText: 'New-York', isCorrect: false },\r\n        { answerText: 'St. Petersburg', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Luxemburg?',\r\n      questionImage: 'images/luxemburg.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Luxemburg', isCorrect: true },\r\n        { answerText: 'Moscow', isCorrect: false },\r\n        { answerText: 'Washington', isCorrect: false },\r\n        { answerText: 'Frankfurt', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Monaco?',\r\n      questionImage: 'images/monaco.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Siena', isCorrect: false },\r\n        { answerText: 'Sofia', isCorrect: false },\r\n        { answerText: 'Monaco', isCorrect: true },\r\n        { answerText: 'Kazan', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Netherlands?',\r\n      questionImage: 'images/netherlands.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Toronto', isCorrect: false },\r\n        { answerText: 'Islamabad', isCorrect: false },\r\n        { answerText: 'Tirana', isCorrect: false },\r\n        { answerText: 'Amsterdam', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of France?',\r\n      questionImage: 'images/france.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Paris', isCorrect: true },\r\n        { answerText: 'New-York', isCorrect: false },\r\n        { answerText: 'London', isCorrect: false },\r\n        { answerText: 'Ottawa', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Switzerland?',\r\n      questionImage: 'images/switzerland.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Bern', isCorrect: true },\r\n        { answerText: 'Madrid', isCorrect: false },\r\n        { answerText: 'Sarajevo', isCorrect: false },\r\n        { answerText: 'Sydney', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    // Eastern Europe\r\n    {\r\n      questionText: 'What the capital of Belarus?',\r\n      questionImage: 'images/belarus.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Moscow', isCorrect: false },\r\n        { answerText: 'Minsk', isCorrect: true },\r\n        { answerText: 'Rome', isCorrect: false },\r\n        { answerText: 'Kursk', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Bulgaria?',\r\n      questionImage: 'images/bulgaria.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Venice', isCorrect: false },\r\n        { answerText: 'Sofia', isCorrect: true },\r\n        { answerText: 'Manchester', isCorrect: false },\r\n        { answerText: 'Chicago', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Hungary?',\r\n      questionImage: 'images/hungary.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Bruges', isCorrect: false },\r\n        { answerText: 'Valletta', isCorrect: false },\r\n        { answerText: 'Bucharest', isCorrect: false },\r\n        { answerText: 'Budapest', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Moldova?',\r\n      questionImage: 'images/moldova.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Chisinau', isCorrect: true },\r\n        { answerText: 'Barcelona', isCorrect: false },\r\n        { answerText: 'Minsk', isCorrect: false },\r\n        { answerText: 'Kiev', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Poland?',\r\n      questionImage: 'images/poland.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Lviv', isCorrect: false },\r\n        { answerText: 'Gdansk', isCorrect: false },\r\n        { answerText: 'Warsaw', isCorrect: true },\r\n        { answerText: 'Donetsk', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Russia?',\r\n      questionImage: 'images/russia.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Kiev', isCorrect: false },\r\n        { answerText: 'Washington', isCorrect: false },\r\n        { answerText: 'St. Petersburg', isCorrect: false },\r\n        { answerText: 'Moscow', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Romania?',\r\n      questionImage: 'images/romania.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Tirana', isCorrect: false },\r\n        { answerText: 'Bucharest', isCorrect: true },\r\n        { answerText: 'Ljubljana', isCorrect: false },\r\n        { answerText: 'Budapest', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Slovakia?',\r\n      questionImage: 'images/slovakia.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Bratislava', isCorrect: true },\r\n        { answerText: 'Belgrade', isCorrect: false },\r\n        { answerText: 'Zagreb', isCorrect: false },\r\n        { answerText: 'London', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Czech?',\r\n      questionImage: 'images/czech.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Bern', isCorrect: false },\r\n        { answerText: 'Tallinn', isCorrect: false },\r\n        { answerText: 'Prague', isCorrect: true },\r\n        { answerText: 'Oslo', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Ukraine?',\r\n      questionImage: 'images/ukraine.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Minsk', isCorrect: false },\r\n        { answerText: 'Riga', isCorrect: false },\r\n        { answerText: 'Donetsk', isCorrect: false },\r\n        { answerText: 'Kiev', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    // North Europe\r\n    {\r\n      questionText: 'What the capital of Denmark?',\r\n      questionImage: 'images/denmark.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Copenhagen', isCorrect: true },\r\n        { answerText: 'Reykjavik', isCorrect: false },\r\n        { answerText: 'Stockholm', isCorrect: false },\r\n        { answerText: 'Helsinki', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Iceland?',\r\n      questionImage: 'images/iceland.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Vilnius', isCorrect: false },\r\n        { answerText: 'Oslo', isCorrect: false },\r\n        { answerText: 'Brussels', isCorrect: false },\r\n        { answerText: 'Reykjavik', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Latvia?',\r\n      questionImage: 'images/latvia.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Tallinn', isCorrect: false },\r\n        { answerText: 'Riga', isCorrect: true },\r\n        { answerText: 'Prague', isCorrect: false },\r\n        { answerText: 'Bruges', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Lithuania?',\r\n      questionImage: 'images/lithuania.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Minsk', isCorrect: false },\r\n        { answerText: 'Bucharest', isCorrect: false },\r\n        { answerText: 'Warsaw', isCorrect: false },\r\n        { answerText: 'Vilnius', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Norway?',\r\n      questionImage: 'images/norway.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Oslo', isCorrect: true },\r\n        { answerText: 'Reykjavik', isCorrect: false },\r\n        { answerText: 'Stockholm', isCorrect: false },\r\n        { answerText: 'Copenhagen', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Finland?',\r\n      questionImage: 'images/finland.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Murmansk', isCorrect: false },\r\n        { answerText: 'London', isCorrect: false },\r\n        { answerText: 'Helsinki', isCorrect: true },\r\n        { answerText: 'Bruges', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Estonia?',\r\n      questionImage: 'images/estonia.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Riga', isCorrect: false },\r\n        { answerText: 'Tallinn', isCorrect: true },\r\n        { answerText: 'Vilnius', isCorrect: false },\r\n        { answerText: 'Minsk', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Sweden?',\r\n      questionImage: 'images/sweden.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Oslo', isCorrect: false },\r\n        { answerText: 'Odense', isCorrect: false },\r\n        { answerText: 'Reykjavik', isCorrect: false },\r\n        { answerText: 'Stockholm', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    // South Europe\r\n    {\r\n      questionText: 'What the capital of Albania?',\r\n      questionImage: 'images/albania.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Tirana', isCorrect: true },\r\n        { answerText: 'Sarajevo', isCorrect: false },\r\n        { answerText: 'Rome', isCorrect: false },\r\n        { answerText: 'Belgrade', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Andorra?',\r\n      questionImage: 'images/andorra.jpg',\r\n      answerOptions: [\r\n        { answerText: 'San Marino', isCorrect: false },\r\n        { answerText: 'Vatican', isCorrect: false },\r\n        { answerText: 'Andorra la Vella', isCorrect: true },\r\n        { answerText: 'Ljubljana', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Bosnia and Herzegovina?',\r\n      questionImage: 'images/big.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Tirana', isCorrect: false },\r\n        { answerText: 'Sarajevo', isCorrect: true },\r\n        { answerText: 'Skopje', isCorrect: false },\r\n        { answerText: 'Belgrade', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Vatican?',\r\n      questionImage: 'images/vatican.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Rome', isCorrect: false },\r\n        { answerText: 'Andorra la Vella', isCorrect: false },\r\n        { answerText: 'Monaco', isCorrect: false },\r\n        { answerText: 'Vatican', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Greece?',\r\n      questionImage: 'images/greece.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Athens', isCorrect: true },\r\n        { answerText: 'Thessaloniki', isCorrect: false },\r\n        { answerText: 'Valletta', isCorrect: false },\r\n        { answerText: 'Cyprus', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Spain?',\r\n      questionImage: 'images/spain.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Sofia', isCorrect: false },\r\n        { answerText: 'Valencia', isCorrect: false },\r\n        { answerText: 'Madrid', isCorrect: true },\r\n        { answerText: 'Barcelona', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Italy?',\r\n      questionImage: 'images/italy.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Vatican', isCorrect: false },\r\n        { answerText: 'Rome', isCorrect: true },\r\n        { answerText: 'Venice', isCorrect: false },\r\n        { answerText: 'Madrid', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of North Macedonia?',\r\n      questionImage: 'images/north-macedonia.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Athens', isCorrect: false },\r\n        { answerText: 'Sarajevo', isCorrect: false },\r\n        { answerText: 'Ljubljana', isCorrect: false },\r\n        { answerText: 'Scopje', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Malta?',\r\n      questionImage: 'images/malta.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Valletta', isCorrect: true },\r\n        { answerText: 'Cyprus', isCorrect: false },\r\n        { answerText: 'Rome', isCorrect: false },\r\n        { answerText: 'Tirana', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Portugal?',\r\n      questionImage: 'images/portugal.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Madrid', isCorrect: false },\r\n        { answerText: 'Berlin', isCorrect: false },\r\n        { answerText: 'Lisbon', isCorrect: true },\r\n        { answerText: 'Bruges', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of San Marino?',\r\n      questionImage: 'images/san-marino.jpg',\r\n      answerOptions: [\r\n        { answerText: 'San Marino', isCorrect: true },\r\n        { answerText: 'Andorra la Vella', isCorrect: false },\r\n        { answerText: 'Rome', isCorrect: false },\r\n        { answerText: 'Monaco', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Serbia?',\r\n      questionImage: 'images/serbia.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Sofia', isCorrect: false },\r\n        { answerText: 'Bucharest', isCorrect: false },\r\n        { answerText: 'Belgrade', isCorrect: true },\r\n        { answerText: 'Sarajevo', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Slovenia?',\r\n      questionImage: 'images/slovenia.jpg',\r\n      answerOptions: [\r\n        { answerText: 'London', isCorrect: false },\r\n        { answerText: 'Moscow', isCorrect: false },\r\n        { answerText: 'Tallin', isCorrect: false },\r\n        { answerText: 'Ljubljana', isCorrect: true }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Croatia?',\r\n      questionImage: 'images/croatia.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Zagreb', isCorrect: true },\r\n        { answerText: 'Bratislava', isCorrect: false },\r\n        { answerText: 'Prague', isCorrect: false },\r\n        { answerText: 'Tirana', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    {\r\n      questionText: 'What the capital of Montenegro?',\r\n      questionImage: 'images/montenegro.jpg',\r\n      answerOptions: [\r\n        { answerText: 'Marrakesh', isCorrect: false },\r\n        { answerText: 'Vilnius', isCorrect: false },\r\n        { answerText: 'Podgorica', isCorrect: true },\r\n        { answerText: 'Athens', isCorrect: false }\r\n      ]\r\n    },\r\n]\r\n\r\nexport default quiz","import React from 'react'\r\n\r\nimport quiz from '../data/quiz';\r\n\r\nconst QuizScore = ({score, handleCheckAnswersBtnClick, handleTryAgainbtnClick}) => {\r\n    return (\r\n        <div className=\"quiz__score\">\r\n            <p className=\"quiz__score-text\">You scored {score} out of {quiz.length}</p>\r\n            <div className=\"quiz__score-btns\">\r\n                <button className=\"btn btn--score\" onClick={handleCheckAnswersBtnClick}>Check answers</button>\r\n                <button className=\"btn btn--score\" onClick={handleTryAgainbtnClick}>Try again</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizScore\r\n","import React from 'react'\r\n\r\nimport quiz from '../data/quiz'\r\n\r\nconst QuizImage = ({currentQuestion}) => {\r\n    return (\r\n        <div className=\"quiz__image\">\r\n            <img src={`${process.env.PUBLIC_URL}/${quiz[currentQuestion].questionImage}`} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizImage\r\n","import React from 'react'\r\n\r\nconst InputAnswer = ({inputAnswer, setInputAnswer, formAnswerSubmit}) => {\r\n    return (\r\n        <form className=\"form-answer\" onSubmit={formAnswerSubmit}>\r\n            <input className=\"form-answer__input\" type=\"text\" placeholder=\"Your answer\"  value={inputAnswer} autoComplete=\"off\" onChange={event => setInputAnswer(event.target.value)}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputAnswer\r\n","import React, {useState} from 'react'\r\n\r\nimport quiz from '../data/quiz';\r\n\r\nimport AnswerMode from '../components/AnswerMode';\r\nimport QuizScore from '../components/QuizScore';\r\nimport QuizImage from '../components/QuizImage';\r\nimport InputAnswer from '../components/InputAnswer';\r\nimport QuizAnswer from '../components/QuizAnswer';\r\n// import AnswerBtns from '../components/AnswerBtns';\r\n\r\n\r\nconst Quiz = ({answerMode, onChangeAnswerMode}) => {\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n    const [score, setScore] = useState(0);\r\n\r\n    const [showScore, setShowScore] = useState(false);\r\n\r\n    const [inputAnswer, setInputAnswer] = useState('');\r\n\r\n    // Test mode: choose the answer\r\n    const handleAnswerClick = (isCorrect) =>{\r\n        if(isCorrect === true){\r\n            setScore(score + 1);\r\n        }\r\n        const nextQuestion = currentQuestion + 1;\r\n        if(nextQuestion < quiz.length){\r\n            setCurrentQuestion(nextQuestion);\r\n        }\r\n        else{\r\n            setShowScore(true);\r\n        }\r\n    }\r\n\r\n    \r\n    const handleCheckAnswersBtnClick = () =>{\r\n\r\n    }\r\n\r\n    // Show score block, try again button click (start the same quiz again)\r\n    const handleTryAgainbtnClick = ()=> {\r\n        setShowScore(false);\r\n        setScore(0);\r\n        setCurrentQuestion(0);\r\n    }\r\n\r\n    // Hard mode: submit form after typing the asnwer in the inputBox\r\n    const handleSubmitAnswerForm = (event) =>{\r\n        event.preventDefault();\r\n\r\n        let correctAnswer;\r\n        quiz[currentQuestion].answerOptions.forEach((item)=>{\r\n            if(item.isCorrect === true){\r\n                correctAnswer = item.answerText;\r\n            }\r\n        })\r\n\r\n        if(inputAnswer.toUpperCase() === correctAnswer.toUpperCase()){\r\n            setScore(score +1);\r\n            let nextQuestion = currentQuestion + 1;\r\n            if(nextQuestion < quiz.length){\r\n                setCurrentQuestion(nextQuestion);\r\n            }\r\n            else{\r\n                setShowScore(true);\r\n            }\r\n            setInputAnswer('');\r\n        }\r\n        else {\r\n            let nextQuestion = currentQuestion + 1;\r\n            if(nextQuestion < quiz.length){\r\n                setCurrentQuestion(nextQuestion);\r\n            }\r\n            setInputAnswer('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main-content\">\r\n            <section className=\"section section--quiz\">\r\n                <div className=\"container\">\r\n                    <div className=\"section__inner\">\r\n                        <h1 className=\"section__title\">European capitals</h1>\r\n                        <div className=\"section__content\">\r\n                        {\r\n                            showScore ? (\r\n                                <QuizScore score={score} handleCheckAnswersBtnClick={handleCheckAnswersBtnClick} handleTryAgainbtnClick={handleTryAgainbtnClick}/>\r\n                            ) :\r\n                                \r\n                            (\r\n                                <>\r\n                                        <QuizImage currentQuestion={currentQuestion}/>\r\n                                        <div className=\"quiz__text-block\">\r\n                                            <div className=\"control\">\r\n                                                <h6 className=\"control__title\">Settings</h6>\r\n                                                <div className=\"control__content\">\r\n                                                    <div className=\"control-item\">\r\n                                                        <AnswerMode answerMode={answerMode} onToggleAnswerMode={onChangeAnswerMode}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"quiz__question\">\r\n                                                <h3 className=\"quiz__question-title\">{currentQuestion + 1}/<span>{quiz.length}</span> {quiz[currentQuestion].questionText}</h3>\r\n                                            </div>\r\n                                            <div className=\"quiz__answer\">\r\n                                                {\r\n                                                    answerMode ? (\r\n                                                        <InputAnswer formAnswerSubmit={handleSubmitAnswerForm} inputAnswer={inputAnswer} setInputAnswer={setInputAnswer}/>\r\n                                                    ) :\r\n\r\n                                                    (\r\n                                                        quiz[currentQuestion].answerOptions.map( (item, index) => (\r\n                                                            <button className=\"btn\" key={index} onClick={()=> handleAnswerClick(item.isCorrect)}>{item.answerText}</button>\r\n                                                        ))\r\n                                                    )      \r\n\r\n                                                }\r\n                                            </div>\r\n                                            {/* <QuizAnswer answerMode={answerMode} inputAnswer={inputAnswer} currentQuestion={currentQuestion} setInputAnswer={setInputAnswer} onSubmitAnswer={handleSubmitAnswerForm} onAnswerClick={handleAnswerClick}/> */}\r\n                                        </div>\r\n                                </>\r\n                            )\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz\r\n","import React, {useState} from 'react'\r\n\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport './scss/main.scss';\r\n\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\n\r\nimport Home from './pages/Home';\r\nimport Quiz from './pages/Quiz';\r\n\r\nfunction App() {\r\n  const [toggleSidebar, setToggleSidebar] = useState(false);\r\n\r\n  const [answerMode, setAnswerMode] = useState(false);\r\n\r\n  const sidebarToggling = ()=>{\r\n    setToggleSidebar(!toggleSidebar);\r\n  }\r\n\r\n  // Burger btn click\r\n  const classes = [];\r\n  \r\n  if(toggleSidebar){\r\n    classes.push('active')\r\n  }\r\n  else classes.pop()\r\n\r\n  // Answer mode\r\n  const handleCheckboxClick = () =>{\r\n    setAnswerMode(!answerMode);\r\n}\r\n  \r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className={`main ${classes.join(' ')}`}>\r\n        <HashRouter basename=\"/\">\r\n          <Header toggleSidebar={toggleSidebar} onSidebarToggling={sidebarToggling}/>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/quiz\">\r\n            <Quiz answerMode={answerMode} onChangeAnswerMode={handleCheckboxClick}/>\r\n          </Route>\r\n        </HashRouter>\r\n      </div>\r\n      <Sidebar toggleSidebar={toggleSidebar} answerMode={answerMode} onChangeAnswerMode={handleCheckboxClick}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}